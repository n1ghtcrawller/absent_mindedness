import React, { useState } from 'react';
import './InviteFriend.css';
import CustomButton from '../../components/Button/CustomButton';
import BackButton from '../../components/BackButton/BackButton';

const InviteFriend = () => {
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);
    const [successMessage, setSuccessMessage] = useState(null);

    const generateInviteLink = () => {
        // –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—é –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram.WebApp.initData –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return 'https://t.me/your_bot?start=ref_12345';
    };

    const handleSendInvite = async () => {
        setError(null);
        setSuccessMessage(null);
        setLoading(true);

        try {
            const inviteLink = generateInviteLink();
            const messageText = `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫—Ä—É—Ç–æ–º—É –±–æ—Ç—É! üöÄ ${inviteLink}`;

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ Telegram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            Telegram.WebApp.shareMessage(
                messageText,
                (isSent) => {
                    if (isSent) {
                        setSuccessMessage('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! üéâ');
                    } else {
                        setError('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï');
                    }
                    setLoading(false);
                }
            );

        } catch (error) {
            setError('–û—à–∏–±–∫–∞: ' + error.message);
            setLoading(false);
        }
    };

    return (
        <div className="invite-friend-container">
            <BackButton />

            <div className="invite-content">
                <h1>–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ üëã</h1>
                <p>–ü–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ!</p>

                <div className="invite-illustration">
                    <div className="animated-icon">üöÄ</div>
                </div>

                {error && <div className="error-message">{error}</div>}
                {successMessage && <div className="success-message">{successMessage}</div>}

                <CustomButton
                    label={loading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π'}
                    onClick={handleSendInvite}
                    disabled={loading}
                    icon="üíå"
                    className="pulse-button"
                />
            </div>
        </div>
    );
};

export default InviteFriend;